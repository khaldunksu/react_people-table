{"version":3,"sources":["TablePeople.js","PeoplePage.js","App.js","index.js"],"names":["TablePeople","_ref","people","setSortBy","location","useLocation","history","useHistory","react_default","a","createElement","className","onClick","map","person","push","pathname","concat","name","replace","search","id","born","century","died","age","sex","mother","father","PeoplePage","useEffect","fetch","then","response","json","peopleFromServer","setPeople","index","Object","objectSpread2","Math","ceil","_useState","useState","_useState2","slicedToArray","searchParams","URLSearchParams","query","get","visiblePeople","filter","toLowerCase","includes","toConsumableArray","type","placeholder","value","onChange","event","set","target","toString","src_TablePeople","selectParams","sort","b","localeCompare","App","react_router_dom","to","exact","react_router","path","render","Fragment","component","ReactDOM","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.c9b9fcc7.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst TablePeople = ({ people, setSortBy }) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  // const searchParams = new URLSearchParams(location.search);\n  // const query = searchParams.get('query') || '';\n  return (\n    <div>\n      <div className=\"people_table\">\n        <table className=\"ui inverted table\">\n          <thead>\n            <tr>\n              {/*eslint-disable */}\n              <td onClick={() => setSortBy('id')}>id</td>\n              <td onClick={() => setSortBy('name')}>name</td>\n              <td onClick={() => setSortBy('century')}>century</td>\n              <td onClick={() => setSortBy('born')}> born</td>\n              <td onClick={() => setSortBy('died')}>died</td>\n              <td onClick={() => setSortBy('age')}>age</td>\n              <td onClick={() => setSortBy('sex')}>sex</td>\n              {/* eslint-enable */}\n              <td>mother</td>\n              <td>father</td>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map(person => (\n              <tr\n                onClick={() => {\n                  history.push({\n                    pathname: `/people/${person.name.replace(/\\s/g, '-')}`,\n                    search: location.search,\n                  });\n                }\n                }\n              >\n                <td>{person.id}</td>\n                <td className={person.born < 1650 ? 'before_1650' : ''}>\n                  {person.name}\n                </td>\n                <td>{person.century}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n\n                <td className={person.age >= 65 ? 'long_liver' : ''}>\n                  {person.age}\n                </td>\n                <td className={person.sex === 'm' ? 'man' : 'woman'}>\n                  {person.sex}\n                </td>\n                <td>{person.mother}</td>\n                <td>{person.father}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nTablePeople.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setSortBy: PropTypes.func.isRequired,\n};\n\nexport default TablePeople;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport TablePeople from './TablePeople';\n\nconst API = 'https://mate-academy.github.io/react_people-table/api/people.json';\nconst getPeople = () => fetch(API)\n  .then(response => response.json());\n\nconst PeoplePage = () => {\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer.map((person, index) => ({\n          ...person,\n          id: index + 1,\n          age: person.died - person.born,\n          century: Math.ceil(person.died / 100),\n        })));\n      });\n  }, []);\n\n  const [people, setPeople] = useState([]);\n\n  const setSortBy = (selectParams) => {\n    switch (selectParams) {\n      case 'name':\n      case 'sex':\n        setPeople([...people]\n          .sort((a, b) => a[selectParams].localeCompare(b[selectParams])));\n        break;\n      case 'died':\n      case 'born':\n      case 'id':\n      case 'age':\n      case 'century':\n        setPeople([...people]\n          .sort((a, b) => a[selectParams] - b[selectParams]));\n        break;\n      default: setPeople([...people]);\n    }\n\n    searchParams.set('sortBy', selectParams);\n    history.push({ search: searchParams.toString() });\n  };\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\n  const query = searchParams.get('query') || '';\n  const handleInputQuery = (event) => {\n    searchParams.set('query', event.target.value.toLowerCase());\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  const searchPeople = () => (\n    people.filter(person => (person.name || '').toLowerCase().includes(query)\n      || (person.mother || '').toLowerCase().includes(query)\n      || (person.mother || '').toLowerCase().includes(query))\n  );\n\n  const visiblePeople = query ? searchPeople() : [...people];\n\n  return (\n    <div>\n      <div className=\"ui left icon input\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputQuery}\n        />\n        <i className=\"users icon\" />\n      </div>\n      <TablePeople setSortBy={setSortBy} people={visiblePeople} />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, NavLink, HashRouter } from 'react-router-dom';\nimport PeoplePage from './PeoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>People table</h1>\n    <HashRouter>\n      <p className=\"ui secondary  menu\">\n        <NavLink className=\"item\" to=\"/\" exact>Home</NavLink>\n        <NavLink to=\"/people\" exact className=\"item\">People</NavLink>\n      </p>\n      <Switch>\n        <Route exact path=\"/\" render={() => (<></>)} />\n        <Route path=\"/people/:name?\" component={PeoplePage} />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}